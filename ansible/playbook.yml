- name: Provision all servers
  become: true
  hosts: all
  roles:
    - { role: utils, tags: ['utils'] }
    - { role: bind, tags: ['bind'] }
  post_tasks:
    - name: Remove /etc/sudoers.d/kmet
      file:
        path: /etc/sudoers.d/kmet
        state: absent
    - meta: reset_connection

- name: Provision xmr-stak
  become: true
  hosts: xmrstak
  roles:
    - { role: xmr_stak, tags: ['xmr_stak'] }

- name: Provision hypervisors
  become: true
  hosts: docker
  vars_files:
    - vault_vars/all.yml
  pre_tasks:
    - name: Clone infra repository
      git:
        repo: git@github.com:nierdz/infra.git
        version: "master"
        dest: /infra
        accept_hostkey: true
        track_submodules: true
        update: false
    - name: Create /infra/.env and /infra/.ovh
      template:
        src: vault_files/{{ item.value }}
        dest: "{{ item.key }}"
        mode: 0400
        owner: root
        group: root
      with_dict: {
        "/infra/.env": "docker.env",
        "/infra/.ovh": "ovh.secret"
      }
    - name: Create /etc/systemd/system/docker-compose@.service
      template:
        src: docker-compose@.service.j2
        dest: /etc/systemd/system/docker-compose@.service
        mode: 0644
        owner: root
        group: root
    - name: Enable docker-compose services
      service:
        name: "docker-compose@{{ item }}"
        enabled: true
        daemon_reload: true
      with_items:
        - igln
        - madrabbit
        - mnttech
    - name: Install python3-certbot-dns-ovh package
      apt:
        name: python3-certbot-dns-ovh
      register: common_packages_installed
      until: common_packages_installed is success
      retries: 10
      delay: 2
  roles:
    - { role: docker, tags: ['docker'] }
    - { role: certbot, tags: ['certbot'] }
    - { role: mysql_backup, tags: ['mysql_backup'] }

- name: Configure ip failover
  become: true
  hosts: physical
  roles:
    - { role: ip_failover, tags: ['ip_failover'] }

- name: Configure nextcloud servers
  become: true
  hosts: nextcloud
  vars_files:
    - vault_vars/all.yml
  # First nginx will only create a vhost for certbot
  # Then, second one will create actual vhost
  roles:
    - { role: nginx, tags: ['nginx'], dummy: 'first' }
    - { role: certbot, tags: ['certbot'] }
    - { role: nginx, tags: ['nginx'], dummy: 'second' }
    - { role: mysql, tags: ['mysql'] }
    - { role: php, tags: ['php'] }
    - { role: percona, tags: ['percona'] }
    - { role: nextcloud, tags: ['nextcloud'] }
    - { role: mysql_backup, tags: ['mysql_backup'] }
  pre_tasks:
    - name: Install sury key
      apt_key:
        url: "https://packages.sury.org/php/apt.gpg"
        state: present
    - name: Add sury repositories
      apt_repository:
        repo: "deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main"
        state: present
        update_cache: yes
        filename: 'sury'

- name: Provision transmission
  become: true
  hosts: srv1.igln.fr
  vars_files:
    - vault_vars/transmission.yml
  roles:
    - { role: transmission, tags: ['transmission'] }

- name: Provision backuppc
  become: true
  hosts: backup.atelierasap.com
  vars_files:
    - vault_vars/all.yml
  roles:
    - { role: nginx, tags: ['nginx'], dummy: 'first' }
    - { role: certbot, tags: ['certbot'] }
    - { role: nginx, tags: ['nginx'], dummy: 'second' }
    - { role: backuppc, tags: ['backuppc'] }
