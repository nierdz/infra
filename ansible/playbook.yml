- name: Provision all servers
  become: true
  hosts: all
  roles:
    - {role: utils, tags: ['utils']}
    - {role: bind, tags: ['bind']}
  post_tasks:
    - name: Remove /etc/sudoers.d/kmet
      file:
        path: /etc/sudoers.d/kmet
        state: absent
    # Keep this because of my control_path in ssh local configuration
    - name: Remove local control_path to force login again to load group
      file:
        path: /home/{{ ansible_env.USER }}/.ssh/{{ ansible_env.SUDO_USER }}@{{ inventory_hostname }}:22
        state: absent
      delegate_to: localhost
      changed_when: false

- name: Provision xmr-stak
  become: true
  hosts: xmrstak
  roles:
    - {role: xmr_stak, tags: ['xmr_stak']}

- name: Provision docker server
  become: true
  hosts: docker
  vars_files:
    - vault_vars/all.yml
  pre_tasks:
    - name: Clone infra repository
      ansible.builtin.git:
        repo: https://github.com/nierdz/infra.git
        version: "master"
        dest: /infra
        accept_hostkey: true
        update: true
        recursive: false
    - name: Create /infra/.env and /infra/.ovh
      template:
        src: vault_files/{{ item.src }}
        dest: "{{ item.dest }}"
        mode: 0400
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
      loop:
        - { dest: "/infra/.env", src: "docker.env", owner: "www-data", group: "www-data" }
        - { dest: "/infra/.ovh", src: "ovh.secret", owner: "root", group: "root" }
    - name: Create /etc/systemd/system/docker-compose@.service
      template:
        src: docker-compose@.service.j2
        dest: /etc/systemd/system/docker-compose@.service
        mode: 0644
        owner: root
        group: root
    - name: Enable docker-compose services
      service:
        name: "docker-compose@{{ item }}"
        enabled: true
        daemon_reload: true
      with_items:
        - igln
        - valc
  roles:
    - {role: docker, tags: ['docker']}
    - {role: acme_sh, tags: ['acme_sh']}
    - {role: mysql_backup, tags: ['mysql_backup']}
    - {role: logrotate, tags: ['logrotate']}

- name: Configure nextcloud servers
  become: true
  hosts: nextcloud
  vars_files:
    - vault_vars/all.yml
    - vault_vars/nextcloud.yml
  roles:
    - {role: acme_sh, tags: [acme_sh']}
    - {role: nginx, tags: ['nginx']}
    - {role: mysql, tags: ['mysql']}
    - {role: php, tags: ['php']}
    - {role: percona, tags: ['percona']}
    - {role: nextcloud, tags: ['nextcloud']}
  pre_tasks:
    - name: Install sury key
      apt_key:
        url: "https://packages.sury.org/php/apt.gpg"
        state: present
    - name: Add sury repositories
      apt_repository:
        repo: "deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main"
        state: present
        update_cache: true
        filename: sury
    - name: Copy specific nginx configuration files
      copy:
        src: "{{ item }}"
        dest: /etc/nginx/
        owner: root
        mode: 0644
      with_fileglob:
        - nginx/*.conf
    - name: Copy /etc/nginx/dh4096.pem
      copy:
        src: nginx/dh4096.pem
        dest: /etc/nginx/dh4096.pem
        owner: www-data
        mode: 0400

- name: Provision transmission
  become: true
  hosts: transmission
  vars_files:
    - vault_vars/transmission.yml
  roles:
    - {role: transmission, tags: ['transmission']}
