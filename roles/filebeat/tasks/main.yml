---
- name: Install Filebeat
  apt:
    name: "filebeat={{ filebeat_version }}"
    state: present
    update_cache: true
  register: filebeat_installed
  until: filebeat_installed is success
  retries: 10
  delay: 2

- name: Check if filebeat keystore already exists
  stat:
    path: /var/lib/filebeat/filebeat.keystore
  register: filebeat_keystore

- name: Create the keystore if it doesn't exist yet
  command: >
    {{ filebeat_home }}/bin/filebeat
    -c /etc/filebeat/filebeat.yml
    -path.home /usr/share/filebeat
    -path.config /etc/filebeat
    -path.data /var/lib/filebeat
    keystore create
  when: not filebeat_keystore.stat.exists

- name: Check if filebeat password is already stored
  command: >
    {{ filebeat_home }}/bin/filebeat
    -c /etc/filebeat/filebeat.yml
    -path.home /usr/share/filebeat
    -path.config /etc/filebeat
    -path.data /var/lib/filebeat
    keystore list
  register: filebeat_keystore_list
  changed_when: false

- name: Store filebeat password if needed
  shell: >
    set -o pipefail &&
    echo {{ filebeat_password }} |
    {{ filebeat_home }}/bin/filebeat
    -c /etc/filebeat/filebeat.yml
    -path.home /usr/share/filebeat
    -path.config /etc/filebeat
    -path.data /var/lib/filebeat
    keystore add FILEBEAT_PASSWORD
    --stdin --force
  when: '"FILEBEAT_PASSWORD" not in filebeat_keystore_list.stdout'

- name: Create /etc/filebeat/filebeat.yml
  template:
    src: etc/filebeat/filebeat.yml.j2
    dest: /etc/filebeat/filebeat.yml
    owner: root
    group: root
    mode: 0644
  notify:
    - check filebeat configuration
    - restart filebeat

- name: Enable filebeat modules
  file:
    src: "/etc/filebeat/modules.d/{{ item }}.yml.disabled"
    path: "/etc/filebeat/modules.d/{{ item }}.yml"
    state: link
  loop: "{{ filebeat_modules }}"
  notify:
    - check filebeat configuration
    - restart filebeat

- name: Ensure filebeat is enabled and started
  service:
    name: filebeat
    enabled: true
    state: started
