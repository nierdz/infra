# XMR Stak
xmr_stack_cpu_threads: [0, 1]

# Elasticsearch
es_major_version: "7.x"
es_version: "7.1.1"
es_heap_size: "2g"
es_config:
  node.name: "{{inventory_hostname}}"
  cluster.name: "elasticsearch"
  network.host: "{{ ansible_default_ipv4.address }}"
  http.port: 9200
  bootstrap.memory_lock: true
  discovery.type: single-node
# Unless I found a way to manage certs in ansible, I disable boostrap check for now
#es_jvm_custom_parameters:
#  - "-Des.enforce.bootstrap.checks=true"
es_api_host: "{{ ansible_default_ipv4.address }}"
es_users:
  native:
    apm_system:
      password: "{{ apm_system_password }}"
    beats_system:
      password: "{{ beats_system_password }}"
    elastic:
      password: "{{ elastic_password }}"
    filebeat:
      password: "{{ filebeat_password }}"
      roles:
        - filebeat
        - ingest_admin
        - kibana_dashboard_only_user
        - kibana_user
        - monitoring_user
    kibana:
      password: "{{ kibana_password }}"
    logstash_system:
      password: "{{ logstash_system_password }}"
    metricbeat:
      password: "{{ metricbeat_password }}"
      roles:
        - metricbeat
        - ingest_admin
        - kibana_dashboard_only_user
        - kibana_user
        - monitoring_user
    nierdz:
      password: "{{ nierdz_password }}"
      roles:
        - superuser
    packetbeat:
      password: "{{ packetbeat_password }}"
      roles:
        - packetbeat
        - kibana_dashboard_only_user
        - kibana_user
    remote_monitoring_user:
      password: "{{ remote_monitoring_user_password }}"
es_roles:
  native:
    filebeat:
      cluster:
        - manage_ilm
        - manage_index_templates
        - manage_ml
        - manage_pipeline
        - monitor
      indices:
          - names: 'filebeat-*'
            privileges:
              - create_index
              - index
              - manage
              - read
    metricbeat:
      cluster:
        - manage_ilm
        - manage_index_templates
        - manage_ml
        - manage_pipeline
        - monitor
      indices:
          - names: 'metricbeat-*'
            privileges:
              - create_index
              - index
              - manage
              - read
    packetbeat:
      cluster:
        - manage_ilm
        - manage_index_templates
        - manage_ml
        - monitor
      indices:
          - names: 'packetbeat-*'
            privileges:
              - create_index
              - index
              - manage
              - read
es_enable_xpack: true
es_api_basic_auth_username: elastic
es_api_basic_auth_password: "{{ elastic_password }}"

# Filebeat
filebeat_version: "7.1.1"
filebeat_modules:
  - elasticsearch
  - kibana
  - mysql
  - nginx
  - redis
  - system

# Metricbeat
metricbeat_version: "7.1.1"
metricbeat_modules:
  - elasticsearch
  - kibana
  - mysql
  - nginx
  - php_fpm
  - redis

# Packetbet
packetbeat_version: "7.2.0"

# Kibana
kibana_version: "7.1.1"

# Backup/Restore
backup_ftp_host: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          36613532653066356137386237343931366338363730623237633930393237636166613861393335
          3835613365613866656530633936653032316463383662610a616361313664383533303533396632
          38363735393338326430353264653163653131313435333631366235613534333234653761313037
          6533623538663965630a383639643533616562346166656438326430336632373164643838343564
          38356230303934646237306633626662396132633035643164653735316563616530
backup_ftp_login: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          36666232373061623832303466353731326364333639633338373538316639656137346136613065
          6535343336626231373661653961313962613532326532630a373533636266393761313636376636
          65653166306166623030333332393438346139376636363233393631616539343465376239626435
          3232633062626132340a336430623233363961383765306162656439613761643538656165396165
          62336135656634666539356631373366393236363966613631356530616538343461
backup_ftp_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          63336137333033326236343839393762623465663730383936386161383536343337613234326562
          3763633964653064643364323565383232386239653765630a363338313965623736313664343763
          30643364363133653936643964363431376136666631366335333563656135343637376530623431
          6562343830366564610a633061626263353865636265353834663038326662383435613036636334
          3862
backup_fs_directories:
  - '"/var/backups/mysql"'
  - '"/etc/letsencrypt/"'
backup_fs_time_to_keep: "60"
backup_mysql_time_to_keep: "60"

# Crontabs
crontabs:
  backup mysql fs:
    user: root
    state: present
    job: /usr/local/bin/mysql_backup.sh && /usr/local/bin/fs_backup.sh
    minute: 00
    hour: 1
